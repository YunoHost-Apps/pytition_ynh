#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed
then
	ynh_script_progression "Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir/pytition"
fi

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 750 "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R o-rwx "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:www-data "$install_dir"
#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression "Upgrading NGINX web server configuration..."

# Create a dedicated NGINX config
ynh_config_add_nginx

#=================================================
# INSTALL PYTHON DEPENDENCIES
#=================================================
ynh_script_progression "Installing python dependencies..."

(
    set +o nounset
    source "${install_dir}/venv/bin/activate"
    set -o nounset

    python3 -m pip install --upgrade pip
    python3 -m pip install --upgrade lxml_html_clean

    python3 -m pip install --upgrade -r "$install_dir/pytition/requirements.txt"
)

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

secret_key=$(generate_secret_key)

config_path="$install_dir/pytition/pytition/pytition/settings/config.py"
ynh_config_add --template="config.py" --destination="$config_path"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$config_path"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$config_path"

ynh_config_add --template="uwsgi.yaml" --destination="$install_dir/uwsgi.yaml"
chmod 400 "$install_dir/uwsgi.yaml"
chown $app:$app "$install_dir/uwsgi.yaml"

#=================================================
# RUN APP CONFIGURATION
#=================================================
ynh_script_progression "Running app configuration..."

ynh_exec_as_app bash -c "
    set +o nounset
    source '$install_dir/venv/bin/activate'
    set -o nounset
    cd '$install_dir/pytition/pytition'
    export DJANGO_SETTINGS_MODULE=pytition.settings.config
    python3 manage.py migrate
    python3 manage.py collectstatic --clear --noinput
    python3 manage.py compilemessages
"

chown -R $app:www-data "$install_dir/static"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression "Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_config_add_systemd

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression "Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression "Integrating service in YunoHost..."

yunohost service add $app --description="Pytition uWSGI app $app" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
